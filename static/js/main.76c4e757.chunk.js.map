{"version":3,"sources":["components/establishments/Like.js","components/establishments/Dislike.js","components/establishments/Favoris.js","components/establishments/establishment.js","Base.js","components/App.js","serviceWorker.js","index.js","assets/logo.svg"],"names":["Like","_this","this","react_default","a","createElement","className","onClick","props","addclick","Component","Dislike","lessclick","Favoris","Etoile","style","color","Establishment","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","state","like","dislike","console","log","fav","establishment","name","description","establishments_Like","establishments_Dislike","establishments_Favoris","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","base","Rebase","createClass","database","App","randomPseudo","possible","size","Math","floor","random","i","charAt","length","pseudo","searchStringUser","establishments","id","syncState","context","asArray","removeBinding","e","target","value","newEstablishment","push","Date","now","_this2","listEstablishment","filter","searchText","toLowerCase","match","map","establishments_establishment","key","src","logo","alt","title","type","placeholder","onChange","handleChange","bind","test","Boolean","window","location","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"sMAcuBA,0LAVV,IAAAC,EAAAC,KAEL,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAIN,EAAKO,MAAMC,aAC9CN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BANFI,cCYIC,mLAVV,IAAAV,EAAAC,KAEL,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAIN,EAAKO,MAAMI,cAC9CT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,+BANCI,aCWCG,mLATV,IAAAZ,EAAAC,KACL,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcC,QAAS,kBAAIN,EAAKO,MAAMM,UAAUC,MAAO,CAACC,MAAOd,KAAKM,MAAMQ,iBAL7EN,aCgDPO,cA7CX,SAAAA,EAAYT,GAAO,IAAAP,EAAA,OAAAiB,OAAAC,EAAA,EAAAD,CAAAhB,KAAAe,IACfhB,EAAAiB,OAAAE,EAAA,EAAAF,CAAAhB,KAAAgB,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAApB,KAAMM,KAOVC,SAAU,WACNR,EAAKsB,SAAS,SAAAC,GAAK,MAAK,CACpBC,KAAMD,EAAMC,KAAO,MAVRxB,EAcnBW,UAAW,WACPX,EAAKsB,SAAS,SAAAC,GAAK,MAAK,CACpBE,QAASF,EAAME,QAAU,MAhBdzB,EAmBnBa,OAAQ,WACJb,EAAKsB,SAAS,SAAAC,GAAK,MAAK,CACpBR,MAAuB,QAAhBQ,EAAMR,MAAkB,SAAW,SAE5CW,QAAQC,IAAI3B,EAAKuB,MAAMK,MArBzB5B,EAAKuB,MAAQ,CACTC,KAAQ,EACRC,QAAQ,EACRV,MAAM,IALKf,wEA6Bf,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,UAAMH,KAAKM,MAAMsB,cAAcC,MAC7B7B,KAAKM,MAAMsB,cAAcE,YAC3B7B,EAAAC,EAAAC,cAAC4B,EAAD,CAAMxB,SAAUP,KAAKO,WACrBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQJ,KAAKsB,MAAMC,MAClCtB,EAAAC,EAAAC,cAAC6B,EAAD,CAAStB,UAAWV,KAAKU,YACzBT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQJ,KAAKsB,MAAME,SAElCvB,EAAAC,EAAAC,cAAC8B,EAAD,CAAUrB,OAAQZ,KAAKY,OAAQE,MAAOd,KAAKsB,MAAMR,gBAvCrCN,+CCOpB0B,EAAMC,IAASC,cARX,CACRC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,iBAGfC,EAAOC,IAAOC,YAAYX,EAAIY,YCqGvBC,cAzGX,SAAAA,EAAYzC,GAAO,IAAAP,EAAA,OAAAiB,OAAAC,EAAA,EAAAD,CAAAhB,KAAA+C,IAEfhD,EAAAiB,OAAAE,EAAA,EAAAF,CAAAhB,KAAAgB,OAAAG,EAAA,EAAAH,CAAA+B,GAAA3B,KAAApB,KAAMM,KAkDV0C,aAAe,WAKX,IAHA,IAAIA,EAAkB,GAChBC,EAAgB,uDAChBC,EAAgBC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,EAC9CC,EAAE,EAAGA,EAAIJ,EAAMI,IACpBN,GAAgBC,EAASM,OAAOJ,KAAKC,MAAMD,KAAKE,SAAWJ,EAASO,SAGxEzD,EAAKsB,SAAS,CACVoC,OAAST,KAzDbjD,EAAKuB,MAAQ,CACTmC,OAAU,UACVC,iBAAkB,GAClBC,eAAiB,CACb,CACIC,GAAc,YACd/B,KAAc,WACdC,YAAc,2BAElB,CACI8B,GAAc,YACd/B,KAAc,YACdC,YAAc,8BAElB,CACI8B,GAAc,YACd/B,KAAc,WACdC,YAAc,sCAtBX/B,mFA4BfC,KAAKmC,SAAWQ,EAAKkB,UAAU,iBAAkB,CACjDC,QAAS9D,KACTsB,MAAO,iBACPyC,SAAS,mDAKTpB,EAAKqB,cAAchE,KAAKmC,+CAEf8B,GACTjE,KAAKqB,SAAS,CAACqC,iBAAkBO,EAAEC,OAAOC,uCAG1C,IAAIC,EAAmBpE,KAAKsB,MAAMqC,eAClCS,EAAiBC,KAAK,CACtBT,GAAKU,KAAKC,MACV1C,KAAO,GACPC,YAAc,qCAEd9B,KAAKqB,SAAS,CAACsC,eAAgBS,qCAiB1B,IAAAI,EAAAxE,KAKDyE,GAJwBzE,KAAKsB,MAAMqC,eAAee,OAAO,SAACC,GAE1D,OADaA,EAAW9C,KAAO,IAAM8C,EAAW7C,aAClC8C,cAAcC,MAAML,EAAKlD,MAAMoC,oBAEzB1D,KAAKsB,MAAMqC,eAAemB,IAAM,SAAClD,GACzD,OACI3B,EAAAC,EAAAC,cAAC4E,EAAD,CACAC,IAAMpD,EAAcgC,GACpBhC,cAAgBA,OAIpB,OACI3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAC3BH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAClBH,EAAAC,EAAAC,cAAA,OAAK8E,IAAKC,IAAM9E,UAAU,WAAW+E,IAAI,SAEnClF,EAAAC,EAAAC,cAAA,sBAAeH,KAAKsB,MAAMmC,OAA1B,QAAyCzD,KAAKM,MAAM8E,OAEpDnF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,KAAGE,QAAUL,KAAKgD,cAAlB,wBAEF/C,EAAAC,EAAAC,cAAA,SACsBkF,KAAK,OACLC,YAAY,SACZnB,MAAOnE,KAAKsB,MAAMoC,iBAClB6B,SAAUvF,KAAKwF,aAAaC,KAAKzF,QAEzDC,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAAImE,EAAKkB,SAA1B,YAEAzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXqE,WAlGUjE,aCKEmF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjB,MACvB,2DCZNkB,IAASC,OAAO/F,EAAAC,EAAAC,cAAC8F,EAAD,CAAKb,MAAM,eAAkBc,SAASC,eAAe,SD2H/D,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.76c4e757.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Like extends Component {\n\n    render() {\n     \n        return (   \n        <div className=\"like\" onClick={()=>this.props.addclick()}>\n        <i className=\"fas fa-thumbs-up\"></i>\n        </div>\n        )\n    }\n}\n\n        export default Like\n","import React, { Component } from 'react'\n\nclass Dislike extends Component {\n\n    render() {\n     \n        return (   \n        <div className=\"like\" onClick={()=>this.props.lessclick()}>\n        <i className=\"fas fa-thumbs-down\"></i>\n        </div>\n        )\n    }\n}\n\n        export default Dislike","import React, { Component } from 'react'\n\nclass Favoris extends Component {\n\n    render() {\n        return (   \n        <div className=\"fav\" >\n            <i className=\"fas fa-star\" onClick={()=>this.props.Etoile()} style={{color: this.props.color}} ></i>\n        </div>\n        )\n    }\n}\n\n        export default Favoris","import React, { Component } from 'react'\nimport Like from './Like.js'\nimport Dislike from './Dislike.js'\nimport Favoris from './Favoris'\nclass Establishment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            like  : 0,\n            dislike:0,\n            color:\"\",\n        }\n    }\n    addclick =()=> {\n        this.setState(state => ({\n            like: state.like + 1\n          }));\n    }\n\n    lessclick =()=> {\n        this.setState(state => ({\n            dislike: state.dislike - 1\n          }));\n        }\n    Etoile =()=>{\n        this.setState(state => ({\n            color: state.color === 'red' ? 'yellow' : 'red'\n          }));\n          console.log(this.state.fav)\n\n    }    \n            \n    render() {\n \n        return (\n            <div className='establishment' >\n                <h3>{ this.props.establishment.name }</h3>\n                { this.props.establishment.description }\n                <Like addclick={this.addclick}/>\n                <div className=\"like\">{this.state.like}</div>\n                <Dislike lessclick={this.lessclick} />\n                <div className=\"like\">{this.state.dislike}</div>\n\n                <Favoris  Etoile={this.Etoile} color={this.state.color} />\n\n            </div>\n        );\n    }\n}\n\nexport default Establishment;","import firebase from 'firebase';\nimport Rebase from 're-base';\n// Initialize Firebase\nconst conf ={\n    apiKey: \"AIzaSyBAMfFd0yQa9u8uarntngURCsg25qSVfcE\",\n    authDomain: \"barproject-c0ed8.firebaseapp.com\",\n    databaseURL: \"https://barproject-c0ed8.firebaseio.com\",\n    projectId: \"barproject-c0ed8\",\n    storageBucket: \"barproject-c0ed8.appspot.com\",\n    messagingSenderId: \"833808119437\"\n  };\n  const app = firebase.initializeApp(conf)\n  const base = Rebase.createClass(app.database())\n export {base}","// Fichier : ./src/App.js\nimport React, { Component } from 'react';\nimport logo from '../assets/logo.svg';\nimport '../css/App.css';\nimport Establishment         from './establishments/establishment.js'\nimport {base} from '../Base';\n// Un Component implémente la méthode render() et reçoit en paramètre ses props\nclass App extends Component {\n    constructor(props) {\n        // Ne pas oublier d'appeler le constructeur père ! (Obligatoire)\n        super(props);\n        // On définit le state de notre component que l'on hérite de la classe \"Component\"\n        // Cela remplace la fonction \"getInitialState\"\n        this.state = {\n            pseudo  : \"Inconnu\",\n            searchStringUser: \"\",\n            establishments : [\n                {\n                    id          : \"0890786GH\",\n                    name        : \"Biberium\",\n                    description : \"Un super bar karaoké\"\n                },\n                {\n                    id          : \"0890786GD\",\n                    name        : \"Brew Dogs\",\n                    description : \"Un super bar à bière\"\n                },\n                {\n                    id          : \"MJLMH0389\",\n                    name        : \"Batonier\",\n                    description : \"Un super bar de fin de soirée\"\n                }\n            ]\n        }\n    }\n    componentDidMount() {\n        this.firebase = base.syncState('establishments', {\n        context: this,\n        state: 'establishments',\n        asArray: true,\n        });\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.firebase);\n    }\n    handleChange(e){\n        this.setState({searchStringUser: e.target.value});\n    }\n    test(){\n        let newEstablishment = this.state.establishments\n        newEstablishment.push({\n        id : Date.now(),\n        name : \"\",\n        description : \"Un super bar de fin de soirée\"\n        })\n        this.setState({establishments: newEstablishment})\n        }\n    // On définit la fonction appelée lors d'un clic sur le lien \"Changer le pseudo !\"\n    // la syntaxe  \" nomFonction = () => {} \" nous permet de conserver le contexte `this` du scope courant. (Ici, la classe App)\n    randomPseudo = () => {\n        // On s'amuse un peu ;)\n        let randomPseudo    = \"\"\n        const possible      = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n        const size          = Math.floor(Math.random() * 10) + 5\n        for( let i=0; i < size; i++ ){\n            randomPseudo += possible.charAt(Math.floor(Math.random() * possible.length))\n        }\n        // On met à jour le state via la fonction \"setState\" héritée de la classe Component\n        this.setState({\n            pseudo : randomPseudo\n        })\n    }\n    render() {\n        const establishmentFilter = this.state.establishments.filter((searchText) => {\n            let search = searchText.name + \" \" + searchText.description;\n            return search.toLowerCase().match(this.state.searchStringUser);\n        })\n      const listEstablishment = this.state.establishments.map ( (establishment)=> {\n        return(\n            <Establishment\n            key={ establishment.id }\n            establishment={ establishment } // on n'a pas oublié la props \"establishment\" :)\n        />\n        )\n      })\n        return (\n            <div className=\"App\">\n<header className=\"App-header\">\n<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n      <h2>Welcome \"{ this.state.pseudo }\" to { this.props.title }</h2>\n\n      <p> \n        <a onClick={ this.randomPseudo } >Changer le pseudo !</a> \n      </p>\n      <input\n                            type=\"text\"\n                            placeholder=\"search\"\n                            value={this.state.searchStringUser}\n                            onChange={this.handleChange.bind(this)}\n                        />\n    <button onClick={()=>this.test()}>Connard</button>\n    </header>\n    <div className=\"App-intro\">\n      { listEstablishment }\n    </div>\n\n  </div>\n);\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App title='HappyDrink'  />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}